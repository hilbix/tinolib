The library which is part of many of my programs
# $Header$
#
# $Log$
# Revision 1.4  2006-06-11 20:10:41  tino
# preparing cvs publishing
#
# Revision 1.3  2005/07/25 03:32:07  tino
# version with diet support
#
# Revision 1.2  2005/02/06 00:24:13  tino
# bugfix update
#
# Revision 1.1  2005/01/26 11:13:03  tino
# Added

This library is often used directly or indirectly in my programs.
It offers some "standard functions" which can be shared.

The idea behind this library is not to have some "standard distribution".
Rather it shall be included in the program's source code.  Don't tell, that
somebody shall grab the "latest version of tinolib" and compile it into the
program.  Never do this.  Make it part of your source code distribution.
Or exactly state which version of tinolib to download and use, as the
versions may internally differ a lot (new options, changed behavior, such).

This library is never ready.  It's steadily evolving.  There is no standard.
And even basic paradigms might change completely.

If you find it useful, use it.  However there is no support on how to use it.
There is nothing which helps you to upgrade to a newer version (use diff and
your brain).  And it might be, that things you need desperately are completely
replaced by something else, so you have to adopt to the new way, or stay by
the old library.

For more information, read the <A HREF=/tinolib/README>README</A>
or have a look into the <A HREF=/tinolib/old/ChangeLog>ChangeLog</A>.

<b>diet support</b>

It now also offers 'diet' usage.  This is a little bit weird, as it
downloads everything neccessary and compiles diet and the libraries
from scratch, so it probably uses some old versions.  However I need
this, as I found out, that often using "export CC='diet gcc'; make"
leads to errors such as "dlopen needs glibc", which renders the
statically build binary plain unusable.  tinolib/diet/ shall fix this
for my projects.

<b>C++ support:</b> (New)

I started with the C++ support as I want to migrate to C++ slowly.  So
please be prepared that more and more C++ features will show up in the
lib.  Souces must be named .cc, includes which need C++ are .hh files.
