2005-01-25    <tino@firebird.03.softkill.net>

	* Makefile-test.sh (genit): TINO_FILE_EXCEPTION added to allow
	"make test" to work again.

	* exception.h (tino_throw_str): corrected, and other changes to
	make this file include.  IT IS STILL NOT USABLE!
	
	* file.h: minor clarifications

	* ex.h (TINO_EXIT): added for exception overwrite
	
	* fatal.h (TINO_FATAL): added for exception overwrite

	* str.h (tino_str_vprintf_null, tino_str_vprintf): added

2005-01-04    <tino@firebird.03.softkill.net>

	* exception.h, io.h: continued to write, still not ready

	* memwild.h: Unit test added

	* setproctitle.h (main): improved for make test

	* dev.h: include fix for make test

	* Makefile-test.sh: added for unit tests

	* Makefile: make test

2004-12-07    <tino@firebird.03.softkill.net>

	* setproctitle.h: added

2004-11-03    <tino@firebird.03.softkill.net>

	* slist.h (tino_slist_add): allocated buffer returned to be able
	to change the contents a little bit afterwards.
	(tino_slist_iterate_0): iteration with abort option added.  Well,
	not needed with exceptions in future, but I do not have this yet.

2004-10-22    <tino@firebird.03.softkill.net>

	* getopt.h: added for ptybuffer.  Strings and flags work, rest
	untested.

2004-10-16    <tino@firebird.03.softkill.net>

	* dev.h: enabled

	* str.h (tino_trim), dirty.h: added

2004-10-10    <tino@firebird.03.softkill.net>

	* sock.h (tino_sock_free, tino_sock_new): usage count (number of
	open sockets) added

	* file.h, exception.h: interaction of these two defined, however
	this is ugly.  exception.h not yet usable, too.

2004-10-04    <tino@firebird.03.softkill.net>

	* Makefile.tino.dist, Makefile.awk: changed "stop" rule from error
	prone "##END##" to more easy portable "Makefile::".

2004-10-02    <tino@firebird.03.softkill.net>

	* file.h (tino_file_read_intr, tino_file_read, tino_file_read_all,
	tino_file_write_intr, tino_file_write, tino_file_write_all,
	tino_file_flush, tino_file_flush_fd): added
	(tino_file_open): flags corrected - they shall be dummies, anyway.
	(tino_file_create, tino_file_open_create, tino_file_open_read):
	added
	(tino_file_stat_fd, tino_file_open_fd, tino_file_truncate_fd):
	renamed the functions which operate on a file descriptor to
	FUNC_fd instead of fFUNC.  There are convenience defines (which I
	perhaps might drop in future).

	* slist.h (tino_glist_count): added

2004-09-30    <tino@firebird.03.softkill.net>

	* Makefile.d.proto: ADD_CFLAGS added, such that Generation of .d
	files has a chance to find all includes.

	* Makefile.awk: Ignore the absolute filename paths, too, as those
	change if transported to another platform.

2004-09-29    <tino@firebird.03.softkill.net>

	* Makefile.proto (install), Makefile.tino.dist (INSTALLPATH):
	install now honors the INSTALLPATH variable, and if missing,
	everything is installed in $HOME (currently only $INSTALLPATH/bin/
	is supported).

	* Makefile (dist): Now 'make dist' makes sure no debugging defines
	are still present.

	* Makefile.proto (tar): added

2004-09-04    <tino@firebird.03.softkill.net>

	* Makefile.awk, Makefile.tino.dist, Makefile.proto: changes for
	better override support.

	* Makefile-tino.sh, Makefile.awk, Makefile.proto,
	Makefile.d.proto: automatic creation of dependencies added (new
	#include(...) method Makefile.d.proto).

2004-08-25    <tino@firebird.03.softkill.net>

	* Makefile.awk, Makefile-tino.sh: Lines which contain @MD5TINOIGN@
	will be escaped from MD5 sum safety check.  This is needed to be
	able to add date information in generated files (which always
	changes if re-generated).  Needs the new version of md5copy (which
	only compares by MD5 sum) in Makefile-tino.sh

	* Makefile.proto: Usage clarified, new distfiles noted.

	* Makefile.tino.dist, .cvsignore.dist: added

2004-08-22  U-KOSH\Administrator  <Administrator@KOSH>

	* Makefile, Makefile-tino.sh, Makefile.awk, Makefile.proto: New
	variable TINOCOPY (to copy files from elsewhere) and slight
	improvements of auto-dependencies.

2004-08-18  U-KOSH\Administrator  <Administrator@KOSH>

	* file.h: AIO routines moved in file_aio.h, this is not present in
	CygWin.

	* file_aio.h: added in favor of file.h

	* strwild.h (tino_strwild): BUGfix in case no allquantor was used.

2004-08-17  U-KOSH\Administrator  <Administrator@KOSH>

	* buf.h (tino_buf_get_c): added
	(TINO_BUF_ADD_C): oops, bug found.  Did I ever use this?
	(TINO_BUF_PREPEND_C, tino_buf_prepend, tino_buf_prepend_c,
	tino_buf_prepend_ptr, tino_buf_prepend_n, tino_buf_prepend_s):
	added

	* helpers.h (tino_read_step, tino_read, tino_write_step,
	tino_write): added

2004-08-16  U-KOSH\Administrator  <Administrator@KOSH>

	* buf.h (tino_buf_write): Old implementation of tino_buf_write was
	bullshit.
	(tino_buf_write_ok): added as replacement for tino_buf_write()
	(tino_buf_write_all): added
	(tino_buf_read_all): added, with optimizations

2004-08-15  U-KOSH\Administrator  <Administrator@KOSH>

	* Makefile.proto (install): Forgot to double $ in AWK script rule

	* Makefile.proto (clean): Cygwin uses .exe as filename extension.

	* Makefile (tino): Cygwin has some minor differences in how make
	propagates environment variables. Some of the GNU tools miss some
	options under Cygwin, too.

2004-07-25    <tino@firebird.03.softkill.net>

	* file.h: Added all the large file support things.
	(tino_file_lstat_diff): now uses tino_file_stat() instead of
	stat(), such that it works for large files, too.

2004-07-18    <tino@firebird.03.softkill.net>

	* buf.h (tino_buf_write_eof): usage of max corrected .. (never
	used this function yet)

	* sockbuf.h (tino_sockbuf_process): started to implement

	* sock.h (tino_sock_select): Exceptions added and processing
	optimized a little bit.

	* sock.h (tino_sock_udp): added (not ready yet)

2004-07-06    <tino@firebird.03.softkill.net>

	* sysfix.h: added TINO_VA_COPY for va_copy compatibility

2004-07-03    <tino@firebird.03.softkill.net>

	* Makefile-tar.sh: created for "make dist" and "make tar" purpose

	* Makefile (tar): added

2004-06-13    <tino@firebird.03.softkill.net>

	* sock.h (tino_sock_new): There is a major implementation bug in
	sock.h with tino_sock_imp.  When we realloc() the old pointers get
	possibly invalidated.  Thus this is not the correct way to do it.
	Rewrote the complete allocation stuff.  Perhaps move such
	allocations into it's own module in future, as this is generic.

2004-06-12    <tino@firebird.03.softkill.net>

	* file.h: created new file as I needed file_lstat_diff.

	* Makefile-diff.awk: added for "make diff"
	(state=3): now "No Tags Exist" will be recognized, too
	(END): used "sticky" instead of "stickycount", "untagged files"
	not printed if there are none
	(finish): list of files with warning added.  Sigh .. "Needs Patch"
	added, too, there are just too many different states to recognize.
	Therefor all those CI/CO runs here and now. List of sticky files
	added to count, too.

	* Makefile (diff): added, this function shows a comprehensive list
	of differences to the HEAD revision of CVS.  i.E. this is what you
	get when you do a close look at "cvs status -v"

	* buf.h (tino_buf_read, tino_buf_write): now return int as they
	should

2004-05-23    <tino@firebird.03.softkill.net>

	* sock.h (tino_sock_free): filedescriptor is always destroyed
	after process(.., TINO_SOCK_CLOSE), stupid to leave this to the
	routine sometimes.

2004-05-21    <tino@firebird.03.softkill.net>

	* sock.h (tino_sock_new): Well, one little star makes a big
	difference.  A serious memory corruption occured because there was
	too few memory allocated.  Thanks to -lefence
